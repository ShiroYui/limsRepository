<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ManualMapper">
	
	<!--说明书表 -->
	<sql id="tableName">
		lims_product_manual
	</sql>

	<!--项目表 -->
	<sql id="tableName1">
		lims_project
	</sql>

	<!--个人文件管理表 -->
	<sql id="tableName3">
		lims_personal_file
	</sql>
	
	<!--数据字典表名 -->
	<sql id="dicTableName">
		SYS_DICTIONARIES
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		f.MANUAL_NAME,
		f.MANUAL_URL,	
	</sql>
	
	<!-- 字段用于新增 -->
	<sql id="Field2">
		PROJECT_ID,
		MANUAL_NAME,
		MANUAL_URL
	</sql>

	<!-- 字段用于新增,个人文件-->
	<sql id="Field3">
		lims_personalfile_name,
		lims_personalfile_path,
		lims_personalfile_explain,
		personalfile_user_id
	</sql>
	<!-- 字段值，个人文件 -->
	<sql id="FieldValue3">
		#{lims_personalfile_name},
		#{lims_personalfile_path},
		#{lims_personalfile_explain},
		#{userid}
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{PROJECT_ID},	
		#{MANUAL_NAME},	
		#{MANUAL_URL}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field2"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	<!-- 新增个人文件-->
	<insert id="saveP" parameterType="pd">
		insert into
		<include refid="tableName3"></include>
		(
		<include refid="Field3"></include>
		) values (
		<include refid="FieldValue3"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ID = #{ID}
	</delete>
	<!-- 删除个人文件-->
	<delete id="deleteP" parameterType="pd">
		delete from
		<include refid="tableName3"></include>
		where
		ID = #{ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			ID = #{ID},
			PROJECT_ID = #{PROJECT_ID},
			MANUAL_NAME = #{MANUAL_NAME},
			MANUAL_URL = #{MANUAL_URL},
			MANUAL_ID = MANUAL_ID
		where 
			MANUAL_ID = #{MANUAL_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include> f
		where 
			f.MANUAL_ID = #{MANUAL_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		u.PROJECT_NAME,
		p.ID,
		p.MANUAL_NAME,
		p.MANUAL_URL
		from <include refid="tableName1"></include> u, <include refid="tableName"></include> p
		where u.ID = P.PROJECT_ID
		<if test="pd.projectName!= null and pd.projectName != ''"><!-- 关键词检索 -->
			and
			u.PROJECT_NAME = #{pd.projectName}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			u.PROJECT_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			p.MANUAL_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')

			)
		</if>
	</select>
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> f
	</select>
	<!-- 个人文件列表搜索条件 -->
	<select id="datalistPagepersonalAll" parameterType="page" resultType="pd">
		select p.*,u.ROLE_ID,u.USERNAME
		from lims_personal_file p  left join  sys_user u  on p.personalfile_user_id = u.USER_ID
		where 1=1
		<if test="pd.userid!= null and pd.userid != ''"><!-- userid搜索 -->
			and p.personalfile_user_id = #{pd.userid}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			p.lims_personalfile_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			p.lims_personalfile_explain LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
	</select>

	<!-- 批量删除个人文件列表 -->
	<delete id="deleteAllP" parameterType="String">
		delete from
		<include refid="tableName3"></include>
		where
		ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>